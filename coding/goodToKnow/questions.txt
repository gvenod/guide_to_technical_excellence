https://medium.com/@akashagrawal_33749/cracking-the-firmware-embedded-systems-engineer-interview-d73a37da95bd

Arrays:

binary search
2 pointer search
sliding window problem
kadane algorithm
Strings:

Reverse string
Linked List:

Reverse Singly Linked List
Reverse Doubly Linked List
Merger two linked lists
Add, Delete, Search element of Linked List
Find Middle of List
Find last nth element of list
Find if there is loop in list
Stacks and Queue:

Implement Stack (FIFO) using Arrays
Implement Stack using Linked List
Implement Queue using Linked List
Implement Queue using Arrays
Implement Circular buffer
Bit Manipulation:


atoi, itoa, itob, float to bin (link), atof
Add/Sub in binary (w/o using + operator) link
2s complement (-ve numbers)
	
endianness swap (link)
range of 8 bit (-128 to 127 link)
represent float in binary (link)

Memory:

implement aligned malloc/free ** link
implement malloc/free using static buffers (arrays)


linkedlist
 - print reverse - put it in stack and go to end and then start pop.
 - find if it is circular - fast and slow pointer meets 
 -  
 -

https://medium.com/@akashagrawal_33749/cracking-the-firmware-embedded-systems-engineer-interview-d73a37da95bd